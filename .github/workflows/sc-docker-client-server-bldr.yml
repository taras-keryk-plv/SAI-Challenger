name: sc-docker-client-server-bldr

on:
  pull_request:
    types: [ opened, synchronize, reopened ]
    branches: [ "**" ]
    paths:
      - '.github/workflows/sc-docker-client-server-bldr.yml'
      - 'dockerfiles/Dockerfile.client'
      - 'dockerfiles/Dockerfile.saithrift-client'
      - 'dockerfiles/Dockerfile.server'
      - 'npu/broadcom/BCM56850/saivs/Dockerfile.server'
      - 'common/**'
      - 'cli/**'
      - 'scripts/**'
      - 'configs/**'
      - 'setup.py'
      - 'build.sh'
      - '.dockerignore'

jobs: 
  # build-sc-server:
  #   name: Build SAI Challenger server image
  #   runs-on: ubuntu-20.04
  #   steps:
  #   - uses: actions/checkout@v3
  #   - name: Update submodules
  #     run: git submodule update --init
  #   - name: Build server docker image
  #     run: ./build.sh -i server

  # build-sc-client:
  #   name: Build SAI Challenger client image
  #   runs-on: ubuntu-20.04
  #   steps:
  #   - uses: actions/checkout@v3
  #   - name: Update submodules
  #     run: git submodule update --init
  #   - name: Build client docker image
  #     run: ./build.sh -i client
  #   - name: Build client docker image with SAI thrift
  #     run: ./build.sh -i client -s thrift
  #   - name: Save docker image
  #     run: docker save sc-client > sc-client.tar
  #   - name: Upload docker image for run-sc-tests job
  #     uses: actions/upload-artifact@v3
  #     with:
  #       name: Client Image
  #       path: sc-client.tar

  # run-sc-tests:
  #   name: Build SAI Challenger client
  #   needs: build-sc-client
  #   runs-on: ubuntu-20.04
  #   steps:
  #   - uses: actions/checkout@v3
  #   - name: Update submodules
  #     run: git submodule update --init
  #   - name: Download docker image from build-sc-client job 
  #     uses: actions/download-artifact@v3
  #     with:
  #       name: Client Image
  #   - name: Load Client Image
  #     run: docker load < sc-client.tar
  #   - name: Start SAI-C client 
  #     run: ./run.sh -i client

  test-file-src1:
    name: test src
    runs-on: ubuntu-20.04
    steps: 
    - name: gen file
      run: dd if=/dev/zero of=testfile3 bs=1024k count=100
    - name: Upload for job
      uses: actions/upload-artifact@v3
      with:
        path: testfile3

  test-file-src2:
    name: test src
    runs-on: ubuntu-20.04
    steps: 
    - name: gen file
      run: dd if=/dev/zero of=testfile2 bs=1024k count=1
    - name: Upload for job
      uses: actions/upload-artifact@v3
      with:
        path: testfile2

  test-file-dst:
    name: test dst
    needs: [test-file-src1, test-file-src2] 
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v3
    - uses: actions/download-artifact@v3
      with:
        path: TK/
    - name: 
      shell: bash
      run: 
        value=`find -name testfile1`
        echo The result is $value
    - name: 
      shell: bash
      run: 
        value=`find -name testfile2`
        echo The result is $value
    - name: 
      shell: bash
      run: 
        value=`find -name testfile3`
        echo The result is $value
    - uses: actions/checkout@v3
    - name: Setup tmate session
      uses: mxschmitt/action-tmate@v3