name: sc-docker-client-server-bldr

on:
  pull_request:
    types: [ opened, synchronize, reopened ]
    branches: [ "**" ]
    paths:
      - '.github/workflows/sc-docker-client-server-bldr.yml'
      - 'dockerfiles/Dockerfile.client'
      - 'dockerfiles/Dockerfile.saithrift-client'
      - 'dockerfiles/Dockerfile.server'
      - 'npu/broadcom/BCM56850/saivs/Dockerfile.server'
      - 'common/**'
      - 'cli/**'
      - 'scripts/**'
      - 'configs/**'
      - 'setup.py'
      - 'build.sh'
      - '.dockerignore'

jobs: 
  build-sc-server:
    name: Build SAI Challenger server image
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v3
    - name: Update submodules
      run: git submodule update --init
    - name: Build server docker image
      run: ./build.sh -i server
    - name: Save server base docker image
      run: docker save sc-server-base > sc-server-base.tar
    - name: Upload server base docker image for run-sc-tests job
      uses: actions/upload-artifact@v3
      with:
        name: Server Base Image
        path: sc-server-base.tar
    - name: Save server target docker image
      run: docker save sc-server-trident2-saivs > sc-server-trident2-saivs.tar
    - name: Upload server target docker image for run-sc-tests job
      uses: actions/upload-artifact@v3
      with:
        name: Server Target Image
        path: sc-server-trident2-saivs.tar

  build-sc-client:
    name: Build SAI Challenger client image
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v3
    - name: Update submodules
      run: git submodule update --init
    - name: Build client docker image
      run: ./build.sh -i client
    - name: Build client docker image with SAI thrift
      run: ./build.sh -i client -s thrift
    - name: Save client docker image
      run: docker save sc-client > sc-client.tar
    - name: Upload client docker image for run-sc-tests job
      uses: actions/upload-artifact@v3
      with:
        name: Client Image
        path: sc-client.tar

  run-sc-tests:
    name: Run SAI Challenger client-server tests
    needs: [build-sc-client, build-sc-server]
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v3
    - name: Update submodules
      run: git submodule update --init
    - name: Download client docker image from build-sc-client job 
      uses: actions/download-artifact@v3
      with:
        name: Client Image
    - name: Load client image
      run: docker load < sc-client.tar
    - name: Download server docker image from build-sc-server job
      uses: actions/download-artifact@v3
      with:
        name: Server Base Image
    - name: Load server base image
      run: docker load < sc-server-base.tar
    - name: Download server target docker image from build-sc-server job
      uses: actions/download-artifact@v3
      with:
        name: Server Target Image
    - name: Load server target image
      run: docker load < sc-server-trident2-saivs.tar
    - name: Delete client image artifact
      uses: geekyeggo/delete-artifact@v2
      with:
        name: Client Image
    - name: Delete server base image artifact
      uses: geekyeggo/delete-artifact@v2
      with:
        name: Server Base Image
    - name: Delete server target image artifact
      uses: geekyeggo/delete-artifact@v2
      with:
        name: Server Target Image
    - name: Start SAI-C client 
      run: ./run.sh -i client
    - name: Wait for SAI-C client to come up
      run: sleep 10s
    - name: Start SAI-C server 
      run: ./run.sh -i server -a trident2 -t saivs
    - name: Wait for SAI-C server services to come up
      run: sleep 10s
    - name: Create veth links between client and server dockers
      run: sudo ./veth-create-host.sh sc-server-trident2-saivs-run sc-client-run
    - name: Run SAI Challenger testcases
      run: ./exec.sh --no-tty -i client pytest --testbed=saivs_client_server -v -k "test_l2_basic"
